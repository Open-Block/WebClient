{"version":3,"sources":["ui/blocks/Block.tsx","ui/panels/BlockPanel.tsx","ui/blocks/operational/value/ValueBlocks.ts","index.js"],"names":["BlockRender","props","draggable","style","background","block","backgroundColour","marginLeft","displayTextOffsetX","marginTop","displayTextOffsetY","color","displayTextColour","displayText","BlockList","mode","theme","title","Item","id","value","type","posY","posX","BlockArea","width","height","Page","useState","collapsed","setCollapsed","maxHeight","minHeight","className","collapsible","collapsedWidth","onCollapse","ReactDOM","render","StrictMode","BlockPanel","document","getElementById"],"mappings":"sMAoBO,SAASA,EAAYC,GAC1B,OACE,qBACEC,WAAS,EACTC,MAAO,CACLC,WAAYH,EAAMI,MAAMC,kBAH5B,SAME,mBACEH,MAAO,CACLI,WAAYN,EAAMI,MAAMG,mBACxBC,UAAWR,EAAMI,MAAMK,mBACvBC,MAAOV,EAAMI,MAAMO,mBAJvB,SAOGX,EAAMI,MAAMQ,gB,gEC3BrB,SAASC,IACP,OACE,cAAC,IAAD,CAAMC,KAAK,SAASC,MAAM,OAA1B,SACE,cAAC,IAAD,CAAqBC,MAAM,QAA3B,SACE,cAAC,IAAKC,KAAN,CAA8BD,MAAM,aAApC,SACE,cAACjB,EAAD,CAEEmB,GAAI,EACJd,OCdiBe,GDcG,ECbvB,CACLd,iBAAkB,SAClBO,YAAa,GAAKO,EAClBZ,mBAAoB,EACpBE,mBAAoB,EACpBE,kBAAmB,QACnBS,KAAM,eACND,UDOQE,KAAM,EACNC,KAAM,GAJF,iBAFO,iBADJ,WCTZ,IAAsBH,EDwB7B,SAASI,IACP,OAAO,qBAAKrB,MAAO,CAAEsB,MAAO,MAAOC,OAAQ,UAyB9BC,MAtBf,WACE,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,OACE,eAAC,IAAD,CAAQ3B,MAAO,CAAEuB,OAAQ,OAAQK,UAAW,OAAQC,UAAW,SAA/D,UACE,cAAC,IAAD,CACEC,UAAU,yBACVC,aAAW,EACXC,eAAe,IACfV,MAAM,MACNT,MAAM,OACNb,MAAO,CAAEuB,OAAQ,OAAQM,UAAW,QACpCI,WAAY,kBAAMN,GAAcD,IAPlC,SASE,cAACf,EAAD,MAEF,cAAC,UAAD,UACE,cAACU,EAAD,U,OEzCRa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.63bd39b7.chunk.js","sourcesContent":["export type Block = {\r\n  type: String;\r\n  backgroundColour?: string;\r\n  displayText?: string;\r\n  displayTextColour?: string;\r\n  displayTextOffsetX?: number | string;\r\n  displayTextOffsetY?: number | string;\r\n};\r\n\r\nexport type ValueBlock<V> = Block & {\r\n  value: V;\r\n};\r\n\r\nexport type BlockProps = {\r\n  block: Block;\r\n  id: number;\r\n  posX: number;\r\n  posY: number;\r\n};\r\n\r\nexport function BlockRender(props: BlockProps) {\r\n  return (\r\n    <div\r\n      draggable\r\n      style={{\r\n        background: props.block.backgroundColour,\r\n      }}\r\n    >\r\n      <p\r\n        style={{\r\n          marginLeft: props.block.displayTextOffsetX,\r\n          marginTop: props.block.displayTextOffsetY,\r\n          color: props.block.displayTextColour,\r\n        }}\r\n      >\r\n        {props.block.displayText}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import { booleanBlock } from \"../blocks/operational/value/ValueBlocks\";\r\nimport { BlockRender } from \"../blocks/Block\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport Sider from \"antd/lib/layout/Sider\";\r\nimport { Content } from \"antd/lib/layout/layout\";\r\nimport SubMenu from \"antd/lib/menu/SubMenu\";\r\nimport { useState } from \"react\";\r\n\r\nfunction BlockList(): React.ReactElement {\r\n  return (\r\n    <Menu mode=\"inline\" theme=\"dark\">\r\n      <SubMenu key=\"Value\" title=\"Value\">\r\n        <Menu.Item key=\"booleanBlock\" title=\"true/false\">\r\n          <BlockRender\r\n            key=\"booleanBlock\"\r\n            id={0}\r\n            block={booleanBlock(true)}\r\n            posY={0}\r\n            posX={0}\r\n          />\r\n        </Menu.Item>\r\n      </SubMenu>\r\n    </Menu>\r\n  );\r\n}\r\n\r\nfunction BlockArea(): React.ReactElement {\r\n  return <div style={{ width: \"90%\", height: \"100%\" }}></div>;\r\n}\r\n\r\nfunction Page(): React.ReactElement {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  return (\r\n    <Layout style={{ height: \"100%\", maxHeight: \"100%\", minHeight: \"500px\" }}>\r\n      <Sider\r\n        className=\"site-layout-background\"\r\n        collapsible\r\n        collapsedWidth=\"0\"\r\n        width=\"20%\"\r\n        theme=\"dark\"\r\n        style={{ height: \"100%\", minHeight: \"100%\" }}\r\n        onCollapse={() => setCollapsed(!collapsed)}\r\n      >\r\n        <BlockList />\r\n      </Sider>\r\n      <Content>\r\n        <BlockArea />\r\n      </Content>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Page;\r\n","import { ValueBlock } from \"./../../Block\";\r\n\r\nexport function booleanBlock(value: boolean): ValueBlock<boolean> {\r\n  return {\r\n    backgroundColour: \"yellow\",\r\n    displayText: \"\" + value,\r\n    displayTextOffsetX: 0,\r\n    displayTextOffsetY: 0,\r\n    displayTextColour: \"black\",\r\n    type: \"booleanValue\",\r\n    value,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport BlockPanel from \"./ui/panels/BlockPanel\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BlockPanel />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}